#!/usr/bin/env bash

# Original https://github.com/ThePrimeagen/.dotfiles/blob/master/bin/.local/bin/tmux-sessionizer
export FZF_DEFAULT_OPTS="
	--color=fg:#908caa,hl:#ea9a97
	--color=fg+:#e0def4,bg+:#393552,hl+:#ea9a97
	--color=border:#44415a,header:#3e8fb0,gutter:#232136
	--color=spinner:#f6c177,info:#9ccfd8
	--color=pointer:#c4a7e7,marker:#eb6f92,prompt:#908caa"

# Read paths from config file, fall back to defaults
CONFIG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/tmux-sessionizer/config"
DEFAULT_PATHS=(
	"$HOME"
	"$HOME/.config"
	"$HOME/.dotfiles"
)

# Function to read paths from config
read_paths() {
	local paths=()

	if [[ -f "$CONFIG_FILE" ]]; then
		while IFS= read -r line || [[ -n "$line" ]]; do
			# Skip empty lines and comments
			[[ -z "$line" || "$line" =~ ^[[:space:]]*# ]] && continue
			# Expand ~ to $HOME
			line="${line/#\~/$HOME}"
			# Only add if directory exists
			[[ -d "$line" ]] && paths+=("$line")
		done < "$CONFIG_FILE"
	fi

	# Use defaults if no valid paths found in config
	if [[ ${#paths[@]} -eq 0 ]]; then
		paths=("${DEFAULT_PATHS[@]}")
	fi

	printf '%s\n' "${paths[@]}"
}

if [[ $# -eq 1 ]]; then
	selected=$1
else
	# Build find command with all configured paths
	# Use a while loop for compatibility with bash 3.2 (macOS default)
	search_paths=()
	while IFS= read -r path; do
		search_paths+=("$path")
	done < <(read_paths)

	selected=$(find "${search_paths[@]}" -mindepth 1 -maxdepth 1 -type d 2>/dev/null | fzf)
fi

if [[ -z $selected ]]; then
	exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
	tmux new-session -s $selected_name -c $selected
	exit 0
fi

if ! tmux has-session -t=$selected_name 2>/dev/null; then
	tmux new-session -ds $selected_name -c $selected
fi

tmux switch-client -t $selected_name
